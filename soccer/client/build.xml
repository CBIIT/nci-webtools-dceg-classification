<?xml version="1.0" encoding="UTF-8"?>
<project name="ComputingApp" default="default" basedir=".">
    <property file="build.properties"/>
    <fail message="Please build using Ant 1.7.1 or higher.">
        <condition>
            <not>
                <antversion atleast="1.7.1"/>
            </not>
        </condition>
    </fail>
    <!-- first create our properties -->
    <condition property="isMac">
      <os family="mac" />
    </condition>
    <condition property="isWindows">
      <os family="windows" />
    </condition>
    <condition property="isUnix">
      <os family="unix" />
    </condition>
    <target name="os">
        <echo message="OS: isMac: ${isMac}; isWindows: ${isWindows}; isUnix: ${isUnix};"></echo>
    </target>
    <target name="pre-init">
        <propertyfile
            file="src/computingApp.properties" comment="Application properties">
            <entry key="queue.remote.url" value="${queue.remote.url}"/>
            <entry key="queue.remote.name" value="${queue.remote.name}"/>
            <entry key="soccer.remote.web.host" value="${soccer.remote.web.host}"/>
            <entry key="soccer.remote.web.port" value="${soccer.remote.web.port}"/>
        </propertyfile>
    </target>
    <target name="init" depends="pre-init">
        <mkdir dir="build/classes/META-INF"/>
        <mkdir dir="dist/lib" />
    </target>        
    <path id="compile.classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>        
    </path>
    <target name="compile" depends="init">
        <javac srcdir="src"
               destdir="build/classes"  
               debug="false" 
               includeantruntime="false" 
               source="1.7"
               target="1.7"
               encoding="utf-8">
            <classpath refid="compile.classpath"/>
        </javac>
        <copy file="src/computingApp.properties" todir="build/classes"/>        
    </target>
    <target name="jar" depends="compile" >
        <jar destfile="dist/${ant.project.name}.jar">
            <fileset dir="build/classes"/> 
            <manifest>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Class-Path" value="lib/activemq-all-5.10.0.jar lib/mail.jar lib/quartz-1.6.6.jar lib/jackson-core-asl-1.8.5.jar lib/jackson-mapper-asl-1.8.5.jar lib/commons-logging-1.2.jar lib/SOCcer.jar"/>
                <attribute name="Main-Class" value="gov.nih.nci.app.computingApp"/>
            </manifest>
        </jar>        
    </target>
    <target name="deploy" depends="clean, jar, doMac, doWindows, doUnix">
        <copy todir="dist/lib">
            <fileset dir="lib"/>
        </copy>
    </target>
    <!-- now create our operating system specific targets -->
    <target name="doWindows" if="isWindows">
    <echo message="Came into the Windows target" />
    <echo file="dist/jcmd.bat" append="false">REM 
java -cp "lib/*" -Dgov.nih.cit.soccer.wordnet.dir="${gov.nih.cit.soccer.wordnet.dir}" -Dgov.nih.cit.soccer.output.dir="${gov.nih.cit.soccer.output.dir}" gov.nih.cit.soccer.Soccer %1
"${gov.nih.cit.soccer.rscript}" ${gov.nih.cit.soccer.r.file} %2 %3 
    </echo>
    <echo file="dist/config.properties" append="false"># Soccer Job Related. 
# How often do you want your cmd execute
interval_in_sec=10
# Make sure your cmd is able to run properly in terminal,and then copy/paste here.
full_cmd=jcmd.bat
    </echo>
    </target>
    <target name="doUnix" if="isUnix">
    <echo message="Came into the Unix target" />
    <echo file="dist/jcmd.sh" append="false">#!/bin/bash
if [ -e "$1" ]
then
java -cp "lib/*" -Dgov.nih.cit.soccer.wordnet.dir="${gov.nih.cit.soccer.wordnet.dir}" -Dgov.nih.cit.soccer.output.dir="${gov.nih.cit.soccer.output.dir}" gov.nih.cit.soccer.Soccer $1
${gov.nih.cit.soccer.rscript} ${gov.nih.cit.soccer.r.file} $2 $3
else
echo "$1 does not exist!"
fi
    </echo>
    <echo file="dist/config.properties" append="false"># Soccer Job Related. 
# How often do you want your cmd execute
interval_in_sec=10
# Make sure your cmd is able to run properly in terminal,and then copy/paste here.
full_cmd=jcmd.sh
    </echo>
    </target>   
    <target name="doMac" if="isMac">
    <echo message="*** This ant build does not support Mac yet *** " />    
    <echo message="*** If you see this message, please stop and consult Help Desk *** " />    
    </target> 
    <target name="clean">
        <delete includeEmptyDirs="true" quiet="true" dir="build"/>
        <delete includeEmptyDirs="true" quiet="true" dir="dist"/>
    </target>   
    <target name="default" depends="clean, deploy"/>
</project>
